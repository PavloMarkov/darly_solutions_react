{"version":3,"sources":["api/constants/const.ts","api/fetch.ts","components/InputArea.tsx","components/table.tsx","App.tsx","index.tsx"],"names":["dataByPage","BASE_URL","request","url","method","data","options","body","JSON","stringify","headers","fetch","then","response","ok","Error","statusText","json","client","InputArea","props","addUser","useState","userName","setUserName","userLastName","setUserLastName","userPhone","setUserPhone","userEmail","setUserEmail","gender","setGender","isOpenSneckBar","setIsOpenSneckBar","isAddingUser","setIsAddingUser","handleClose","event","reason","isCorrectEmail","test","isCorrectPhone","isCorrectGender","isCorrectName","isCorrectLastName","isUserInfoFull","isInfoToClear","clearInputs","className","Button","sx","m","type","variant","onClick","prev","Typography","gutterBottom","TextField","error","id","label","helperText","placeholder","value","onChange","e","target","FormControl","minWidth","InputLabel","Select","labelId","MenuItem","disabled","preventDefault","first_name","last_name","phone","email","res","Snackbar","open","autoHideDuration","onClose","Alert","severity","width","TableData","users","rows","forEach","user","push","TableContainer","component","Paper","elevation","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","border","scope","App","setUsers","setError","page","setPage","hasMore","setHasMore","useCallback","prevUsers","useEffect","total","Number","get","catch","pageStart","loadMore","prevList","finally","loader","Box","display","margin","alignItems","justifyContent","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.751d42c2.chunk.js","sourcesContent":["export const dataByPage = 100;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const BASE_URL = 'http://localhost:3004/people';\n\ntype RequestMethod = 'GET' | 'POST';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return fetch(BASE_URL + url, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`error with db ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n};\n","/* eslint-disable no-useless-escape */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport {\n  Alert,\n  Button, FormControl, InputLabel, MenuItem, Select, Snackbar, TextField, Typography,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport { client } from '../api/fetch';\nimport { User } from '../types/User';\n\ntype Props = {\n  addUser: (user: User) => void;\n};\n\nexport const InputArea: React.FC<Props> = (props) => {\n  const { addUser } = props;\n\n  const [userName, setUserName] = useState('');\n  const [userLastName, setUserLastName] = useState('');\n  const [userPhone, setUserPhone] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [gender, setGender] = useState('');\n  const [isOpenSneckBar, setIsOpenSneckBar] = useState(false);\n  const [isAddingUser, setIsAddingUser] = useState(false);\n\n  const handleClick = () => {\n    setIsOpenSneckBar(true);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setIsOpenSneckBar(false);\n  };\n\n  const isCorrectEmail = /\\S+@\\S+\\.\\S+/.test(userEmail);\n  const isCorrectPhone = /\\(?(\\d{3})\\)?[-\\.\\s]?(\\d{3})[-\\.\\s]?(\\d{4})/.test(userPhone);\n  const isCorrectGender = (gender !== '');\n  const isCorrectName = /(^[a-zA-Z][a-zA-Z\\s]{0,20}[a-zA-Z]$)/.test(userName);\n  const isCorrectLastName = /(^[a-zA-Z][a-zA-Z\\s]{0,20}[a-zA-Z]$)/.test(userLastName);\n\n  const isUserInfoFull = isCorrectName && isCorrectLastName && isCorrectGender\n    && isCorrectPhone && isCorrectEmail;\n  const isInfoToClear = (userName !== '') || (userLastName !== '') || isCorrectGender\n  || (userPhone !== '') || (userEmail !== '');\n\n  const clearInputs = () => {\n    setUserName('');\n    setUserLastName('');\n    setUserPhone('');\n    setUserEmail('');\n    setGender('');\n  };\n\n  return (\n    <div className=\"container\">\n      <Button\n        sx={{ m: 2 }}\n        type=\"button\"\n        variant=\"contained\"\n        onClick={() => setIsAddingUser(prev => !prev)}\n      >\n        {isAddingUser\n          ? 'Cancel adding users'\n          : 'Add new user'}\n      </Button>\n      {isAddingUser && (\n        <div className=\"userData\">\n          <Typography variant=\"h6\" gutterBottom>\n            Please, fill in the info about yourself:\n          </Typography>\n          <div className=\"userData__input\">\n            <TextField\n              error={!isCorrectName}\n              id=\"outlined-error\"\n              type=\"text\"\n              label=\"Name\"\n              helperText=\"Enter your name\"\n              placeholder=\"Name\"\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n            />\n          </div>\n          <div className=\"userData__input\">\n            <TextField\n              error={!isCorrectLastName}\n              id=\"outlined-error\"\n              type=\"text\"\n              label=\"Last Name\"\n              placeholder=\"Last Name\"\n              helperText=\"Enter your last name\"\n              value={userLastName}\n              onChange={(e) => setUserLastName(e.target.value)}\n            />\n          </div>\n          <div className=\"userData__input\">\n            <TextField\n              error={!isCorrectPhone}\n              id=\"outlined-error\"\n              type=\"text\"\n              label=\"Phone\"\n              placeholder=\"Phone\"\n              helperText=\"Enter your phone number\"\n              value={userPhone}\n              onChange={(e) => setUserPhone(e.target.value)}\n            />\n          </div>\n          <div className=\"userData__input\">\n            <TextField\n              error={!isCorrectEmail}\n              id=\"outlined-error\"\n              type=\"email\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              helperText=\"Enter your e-mail\"\n              value={userEmail}\n              onChange={(e) => setUserEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"userData__input\">\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel id=\"demo-simple-select-helper-label\">Gender</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-helper-label\"\n                id=\"demo-simple-select-helper\"\n                error={!isCorrectGender}\n                value={gender}\n                label=\"Gender\"\n                onChange={(event) => setGender(event.target.value)}\n              >\n                <MenuItem value=\"\">Chose your gender</MenuItem>\n                <MenuItem value=\"M\">Male</MenuItem>\n                <MenuItem value=\"F\">Female</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div>\n            <Button\n              sx={{ m: 2 }}\n              variant=\"contained\"\n              disabled={!isUserInfoFull}\n              onClick={(event) => {\n                event.preventDefault();\n                client.post<User>('/', {\n                  first_name: userName,\n                  last_name: userLastName,\n                  phone: userPhone,\n                  email: userEmail,\n                  gender,\n                }).then(res => addUser(res));\n                clearInputs();\n                handleClick();\n              }}\n            >\n              Add user\n            </Button>\n            <Button\n              sx={{ m: 2 }}\n              type=\"submit\"\n              variant=\"outlined\"\n              onClick={clearInputs}\n              disabled={!isInfoToClear}\n            >\n              Clear form\n            </Button>\n            <Snackbar\n              open={isOpenSneckBar}\n              autoHideDuration={6000}\n              onClose={handleClose}\n            >\n              <Alert\n                onClose={handleClose}\n                severity=\"success\"\n                sx={{ width: '100%' }}\n              >\n                The new User was successfully added!\n              </Alert>\n            </Snackbar>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n// import { useColorScheme } from '@mui/material';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[];\n};\n\nexport const TableData: React.FC<Props> = (props) => {\n  const { users } = props;\n\n  function createData(\n    id: number,\n    first_name: string,\n    last_name: string,\n    phone: string,\n    email: string,\n    gender: 'M' | 'F' | '',\n  ) {\n    return {\n      id, first_name, last_name, phone, email, gender,\n    };\n  }\n\n  const rows: User[] = [];\n\n  users.forEach(user => {\n    rows.push(\n      createData(user.id, user.first_name, user.last_name, user.phone, user.email, user.gender),\n    );\n  });\n\n  return (\n    <div className=\"container\">\n      <TableContainer\n        component={Paper}\n        elevation={3}\n      >\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Number</TableCell>\n              <TableCell align=\"right\">Name</TableCell>\n              <TableCell align=\"right\">Lastname</TableCell>\n              <TableCell align=\"right\">Phone</TableCell>\n              <TableCell align=\"right\">E-mail</TableCell>\n              <TableCell align=\"right\">Gender</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow\n                key={row.id}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {row.first_name}\n                </TableCell>\n                <TableCell align=\"right\">{row.last_name}</TableCell>\n                <TableCell align=\"right\">{row.phone}</TableCell>\n                <TableCell align=\"right\">{row.email}</TableCell>\n                <TableCell align=\"right\">{row.gender}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <table>\n        <thead>\n          <tr>\n            <th>\n              number\n            </th>\n            <th>\n              name\n            </th>\n            <th>\n              lastname\n            </th>\n            <th>\n              phone\n            </th>\n            <th>\n              e-mail\n            </th>\n            <th>\n              gender\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr\n              key={user.id}\n            >\n              <td>\n                {user.id}\n              </td>\n              <td>\n                {user.first_name}\n              </td>\n              <td>\n                {user.last_name}\n              </td>\n              <td>\n                {user.phone}\n              </td>\n              <td>\n                {user.email}\n              </td>\n              <td>\n                {user.gender}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table> */}\n    </div>\n  );\n};\n","/* eslint-disable react/no-this-in-sfc */\n/* eslint-disable no-console */\nimport { Box, CircularProgress, Typography } from '@mui/material';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { dataByPage } from './api/constants/const';\nimport { BASE_URL, client } from './api/fetch';\nimport './App.scss';\nimport { InputArea } from './components/InputArea';\nimport { TableData } from './components/table';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n\n  const addUser = useCallback((user: User) => {\n    setUsers(prevUsers => [...prevUsers, user]);\n  }, []);\n\n  const loadMoreUsers = () => {\n    client.get<User[]>(`?_page=${page + 1}&_limit=${dataByPage}`)\n      .then(res => {\n        setUsers(prevList => [...prevList, ...res]);\n      })\n      .catch(e => setError(e))\n      .finally(() => setPage(prev => prev + 1));\n  };\n\n  useEffect(() => {\n    fetch(`${BASE_URL}?_page=${1}&_limit=${dataByPage}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`error with db ${response.statusText}`);\n        }\n\n        const total = Number(response.headers.get('X-Total-Count'));\n\n        setHasMore(total > page * dataByPage);\n      })\n      .catch(e => setError(e));\n  }, [page]);\n\n  return (\n    <main className=\"section\">\n      <InputArea addUser={addUser} />\n      {error === ''\n        ? (\n          <InfiniteScroll\n            pageStart={1}\n            loadMore={loadMoreUsers}\n            hasMore={hasMore}\n            loader={(\n              <Box\n                sx={{\n                  display: 'flex',\n                  margin: '20px',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                key={`${page * dataByPage}`}\n              >\n                <CircularProgress />\n              </Box>\n            )}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              All our fake users:\n            </Typography>\n            <TableData users={users} />\n          </InfiniteScroll>\n        )\n        : (\n          <Typography variant=\"h5\" gutterBottom>\n            Error:\n            { error}\n          </Typography>\n        )}\n    </main>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}